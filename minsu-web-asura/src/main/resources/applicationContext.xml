<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/task  
        http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!--================================================ 添加框架基本配置 ok================================================ -->

    <context:property-placeholder location="classpath:*.properties" local-override="true"/>

    <context:component-scan base-package="com.asura" />
	<task:annotation-driven />
	<tx:annotation-driven />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/"/>
	<mvc:resources mapping="/js/**" location="/js/" />
	<!-- 监控图表 -->
	<mvc:resources mapping="/monitor/charts/**" location="/js/" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean
		class="com.asura.framework.spring.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="webBindingInitializer">
			<bean
				class="com.asura.framework.spring.web.bind.support.WebBindingInitializer" />
		</property>
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/authority/**" />
			<mvc:mapping path="/quartz/**" />
			<mvc:mapping path="/dic/**" />
			<mvc:mapping path="/dubbo/**" />
			<bean
				class="com.asura.amp.authority.logon.interceptor.AuthorityInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>





	<!-- 多个PropertyPlaceholderConfigurer载入需要设置ignoreUnresolvablePlaceholders=true -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
				<value>classpath*:dubbo.properties</value>
			</list>
		</property>
	</bean>

	<!--================================================ 添加DAO Spring配置 ================================================ -->

	<bean id="dbcp" abstract="true">
		<property name="initialSize" value="${jdbc.dataSource.initialSize}" />
		<property name="maxIdle" value="${jdbc.dataSource.maxIdle}" />
		<property name="minIdle" value="${jdbc.dataSource.minIdle}" />
		<property name="maxActive" value="${jdbc.dataSource.maxActive}" />
		<property name="removeAbandoned" value="${jdbc.dataSource.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.dataSource.removeAbandonedTimeout}" />
		<property name="maxWait" value="${jdbc.dataSource.maxWait}" />
		<property name="validationQuery" value="${jdbc.dataSource.validationQuery}" />
		<property name="testOnBorrow" value="${jdbc.dataSource.testOnBorrow}" />
	</bean>




	<bean id="amp.DataSource" parent="dbcp"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.amp.url}" />
		<property name="username" value="${jdbc.amp.username}" />
		<property name="password" value="${jdbc.amp.password}" />
	</bean>

	<bean id="ampSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="mappingLocations" value="classpath*:com/asura/amp/**/dao/map/*.xml" />
		<property name="dataSource" ref="amp.DataSource" />
	</bean>

	<bean id="ampBaseIbatisDaoContext" class="com.asura.framework.dao.BaseIbatisDaoContext">
		<property name="readSqlMapClient" ref="ampSqlMapClient" />
		<property name="writeSqlMapClient" ref="ampSqlMapClient" />
	</bean>


	<bean id="amp.transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="amp.DataSource" />
		</property>
	</bean>
	<tx:advice id="amp.txAdvice" transaction-manager="amp.transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(public * com.asura.amp..*.service.*ServiceImpl.*(..))"
			advice-ref="amp.txAdvice" />
	</aop:config>







	<bean id="quartz.DataSource" parent="dbcp"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.quartz.url}" />
		<property name="username" value="${jdbc.quartz.username}" />
		<property name="password" value="${jdbc.quartz.password}" />
	</bean>

	<bean id="quartzSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="mappingLocations"
			value="classpath*:com/asura/amp/quartz/**/dao/map/*.xml" />
		<property name="dataSource" ref="quartz.DataSource" />
	</bean>

	<bean id="quartz.transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="quartz.DataSource" />
		</property>
	</bean>
	<tx:advice id="quartz.txAdvice" transaction-manager="quartz.transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(public * com.asura.amp.quartz.service.*ServiceImpl.*(..))"
			advice-ref="quartz.txAdvice" />
	</aop:config>
	
	
	<!--================================================ 添加Dubbo Spring配置 ================================================ -->
	<dubbo:application name="${dubbo.application.name}" />
	<dubbo:registry address="${dubbo.registry.address}"
		check="false" file="false" />

	<dubbo:protocol name="dubbo" port="${dubbo.protocol.port}" />
	<bean id="monitorService" class="com.asura.amp.dubbo.monitor.SoaMonitorService" />
	<dubbo:service interface="com.alibaba.dubbo.monitor.MonitorService"
		ref="monitorService" delay="-1" />

	<dubbo:reference id="registryService"
		interface="com.alibaba.dubbo.registry.RegistryService" check="false" />

		
	
	
	

</beans>
