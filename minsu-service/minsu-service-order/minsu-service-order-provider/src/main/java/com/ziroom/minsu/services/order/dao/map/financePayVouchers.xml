<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="order.financePayVouchersDao" >
  <resultMap id="BaseResultMap" type="com.ziroom.minsu.entity.order.FinancePayVouchersEntity" >
    <!--
      基本列map
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pv_sn" property="pvSn" jdbcType="VARCHAR" />
    <result column="order_sn" property="orderSn" jdbcType="VARCHAR" />
    <result column="parent_pv_sn" property="parentPvSn" jdbcType="VARCHAR" />
    <result column="bankcard_fid" property="bankcardFid" jdbcType="VARCHAR" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="pay_source_type" property="paySourceType" jdbcType="INTEGER" />
    <result column="receive_uid" property="receiveUid" jdbcType="VARCHAR" />
    <result column="receive_type" property="receiveType" jdbcType="INTEGER" />
    <result column="pay_uid" property="payUid" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="payment_type" property="paymentType" jdbcType="VARCHAR" />
    <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
    <result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
    <result column="payment_status" property="paymentStatus" jdbcType="INTEGER" />
    <result column="previous_payment_status" property="previousPaymentStatus" jdbcType="INTEGER" />
    <result column="actual_pay_time" property="actualPayTime" jdbcType="TIMESTAMP" />
    <result column="generate_fee_time" property="generateFeeTime" jdbcType="TIMESTAMP" />
    <result column="run_time" property="runTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_date" property="lastModifyDate" jdbcType="TIMESTAMP" />
    <result column="is_send" property="isSend" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, pv_sn, order_sn, parent_pv_sn, bankcard_fid, city_code, pay_source_type, receive_uid, 
    receive_type, pay_uid, pay_type, payment_type, total_fee, audit_status, payment_status, 
    previous_payment_status, actual_pay_time, generate_fee_time, run_time, create_id, 
    create_time, last_modify_date, is_send, is_del
  </sql>
  
   <sql id="Mutil_Column_List" >
    <!-- 基本列 -->
    vos.id, vos.pv_sn, vos.order_sn, vos.parent_pv_sn, vos.bankcard_fid, vos.city_code, vos.pay_source_type, vos.receive_uid, vos.receive_type, vos.pay_uid, vos.payment_type, 
    vos.total_fee, vos.audit_status, vos.payment_status, vos.previous_payment_status, vos.actual_pay_time, vos.generate_fee_time, vos.run_time, 
    vos.create_id, vos.create_time, vos.last_modify_date, vos.is_send, vos.is_del
  </sql>

	<resultMap type="com.ziroom.minsu.services.finance.entity.FinancePayVouchersVo" id="FinancePayVouchersVoMap" extends="BaseResultMap">
		<!-- 付款单表返回参数 -->
		<result column="order_status" property="orderStatus" jdbcType="INTEGER" />
		<result column="pay_status" property="payStatus" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_tel" property="userTel" jdbcType="VARCHAR" />
	</resultMap>

	<!-- troy查看付款单详情 -->
	<resultMap type="com.ziroom.minsu.services.order.entity.FinancePayDetailInfoVo" id="financePayDetailInfoVo" extends="BaseResultMap">
		<association column="order_sn" property="orderMoney" javaType="com.ziroom.minsu.entity.order.OrderMoneyEntity" select="order.orderMoneyDao.getOrderMoneyByOrderSn" />
		<collection property="detailList" column="pv_sn" javaType="arrayList" select="order.financePayVouchersDetailDao.findPayVouchersDetailByPvSn"></collection>
		<collection property="logList" column="pv_sn" javaType="arrayList" select="order.financePayVouchersLogDao.findPayVouchersLogByPvSn"></collection>
	</resultMap>

	<!-- troy查看付款单详情 -->
	<select id="getFinancePayDetailInfoVo" resultMap="financePayDetailInfoVo" parameterType="string">
		SELECT
		<include refid="Base_Column_List" />
		FROM t_finance_pay_vouchers pv
		WHERE pv.pv_sn = #{pvSn,jdbcType=VARCHAR}
		AND pv.is_del = 0
		LIMIT 1
	</select>
   
  <!-- 根据付款单号，查询付款记录信息 -->
  <select id="findPayVouchersByPvSn" resultMap="BaseResultMap" parameterType="string">
  	SELECT 
    <include refid="Base_Column_List" />
    FROM t_finance_pay_vouchers pv
    WHERE pv.pv_sn = #{pvSn,jdbcType=VARCHAR}
    AND pv.is_del = 0
    LIMIT 1
  </select>
  
  <!-- 查询付款单中审核通过付款记录数量 -->
  <select id="getNotPayVouchersCount" resultType="java.lang.Long" parameterType="map">
  	SELECT count(id)
	FROM t_finance_pay_vouchers pv
	WHERE pv.is_del = 0
	    AND pv.is_send = #{isSend,jdbcType=INTEGER}
	    AND pv.audit_status = #{auditStatus,jdbcType=INTEGER}
	    AND pv.payment_status = #{paymentStatus,jdbcType=INTEGER}
	    AND pv.run_time &lt; NOW()
  </select>
  <!-- 查询付款单中审核通过付款记录list -->
  <select id="getNotPayVouchersList" resultMap="BaseResultMap" parameterType="map">
  	SELECT
  	<include refid="Base_Column_List" />
	FROM t_finance_pay_vouchers pv
	WHERE pv.is_del = 0
		AND pv.is_send = #{isSend,jdbcType=INTEGER}
	    AND pv.audit_status = #{auditStatus,jdbcType=INTEGER}
	    AND pv.payment_status = #{paymentStatus,jdbcType=INTEGER}
	    AND pv.run_time &lt; NOW()
	    LIMIT #{limit,jdbcType=INTEGER}
  </select>
  
  
  <!-- 查询付款单中失败记录数量 -->
  <select id="getFailedPayVouchersCount" resultType="java.lang.Long" parameterType="map">
  	SELECT count(id)
	FROM t_finance_pay_vouchers pv
	WHERE pv.is_del = 0
	    AND pv.is_send &lt;= #{retryTimes,jdbcType=INTEGER}
	    AND pv.audit_status = #{auditStatus,jdbcType=INTEGER}
	    AND pv.payment_status = #{paymentStatus,jdbcType=INTEGER}
	    AND pv.run_time &lt; NOW()
  </select>
  <!-- 查询付款单中失败记录list -->
  <select id="getFailedPayVouchersList" resultMap="BaseResultMap" parameterType="map">
  	SELECT
  	<include refid="Base_Column_List" />
	FROM t_finance_pay_vouchers pv
	WHERE pv.is_del = 0
		AND pv.is_send &lt;= #{retryTimes,jdbcType=INTEGER}
	    AND pv.audit_status = #{auditStatus,jdbcType=INTEGER}
	    AND pv.payment_status = #{paymentStatus,jdbcType=INTEGER}
	    AND pv.run_time &lt; NOW()
	    LIMIT #{limit,jdbcType=INTEGER}
  </select>
  
  
  
  <insert id="insertSelective" parameterType="com.ziroom.minsu.entity.order.FinancePayVouchersEntity" >
    <!--
      插入数据
    -->
    insert into t_finance_pay_vouchers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pvSn != null" >
        pv_sn,
      </if>
      <if test="orderSn != null" >
        order_sn,
      </if>
      <if test="parentPvSn != null" >
        parent_pv_sn,
      </if>
      <if test="bankcardFid != null" >
        bankcard_fid,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="paySourceType != null" >
        pay_source_type,
      </if>
      <if test="receiveUid != null" >
        receive_uid,
      </if>
      <if test="receiveType != null" >
        receive_type,
      </if>
      <if test="payUid != null" >
        pay_uid,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="paymentStatus != null" >
        payment_status,
      </if>
      <if test="previousPaymentStatus != null" >
        previous_payment_status,
      </if>
      <if test="actualPayTime != null" >
        actual_pay_time,
      </if>
      <if test="generateFeeTime != null" >
        generate_fee_time,
      </if>
      <if test="runTime != null" >
        run_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date,
      </if>
      <if test="isSend != null" >
        is_send,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pvSn != null" >
        #{pvSn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null" >
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="parentPvSn != null" >
        #{parentPvSn,jdbcType=VARCHAR},
      </if>
      <if test="bankcardFid != null" >
        #{bankcardFid,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="paySourceType != null" >
        #{paySourceType,jdbcType=INTEGER},
      </if>
      <if test="receiveUid != null" >
        #{receiveUid,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null" >
        #{receiveType,jdbcType=INTEGER},
      </if>
      <if test="payUid != null" >
        #{payUid,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null" >
        #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="previousPaymentStatus != null" >
        #{previousPaymentStatus,jdbcType=INTEGER},
      </if>
      <if test="actualPayTime != null" >
        #{actualPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="generateFeeTime != null" >
        #{generateFeeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runTime != null" >
        #{runTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyDate != null" >
        #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null" >
        #{isSend,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updatePayVouchersByPvSn" parameterType="com.ziroom.minsu.entity.order.FinancePayVouchersEntity" >
    <!--
      更新
    -->
    update t_finance_pay_vouchers
    <set >
      <if test="pvSn != null" >
        pv_sn = #{pvSn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null" >
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="parentPvSn != null" >
        parent_pv_sn = #{parentPvSn,jdbcType=VARCHAR},
      </if>
      <if test="bankcardFid != null" >
        bankcard_fid = #{bankcardFid,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="paySourceType != null" >
        pay_source_type = #{paySourceType,jdbcType=INTEGER},
      </if>
      <if test="receiveUid != null" >
        receive_uid = #{receiveUid,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null" >
        receive_type = #{receiveType,jdbcType=INTEGER},
      </if>
      <if test="payUid != null" >
        pay_uid = #{payUid,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null" >
        payment_status = #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="previousPaymentStatus != null" >
        previous_payment_status = #{previousPaymentStatus,jdbcType=INTEGER},
      </if>
      <if test="actualPayTime != null" >
        actual_pay_time = #{actualPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="generateFeeTime != null" >
        generate_fee_time = #{generateFeeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runTime != null" >
        run_time = #{runTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null" >
        is_send = #{isSend,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
	where pv_sn = #{pvSn,jdbcType=VARCHAR}
	<if test="oldPaymentStatus != null">
		AND payment_status = #{oldPaymentStatus,jdbcType=INTEGER}
	</if>
  </update>
  
  <!-- 提前退房标志为无效 -->
  <update id="deletePayVouchersByPvSnList" parameterType="map" >
  	update t_finance_pay_vouchers
  	set payment_status = 7
  	where pv_sn in
  	<foreach collection="pvSnList" item="item" index="index"
                       open="(" separator="," close=")">#{item}</foreach>
  </update>
  
  <!-- 逻辑删除付款记录信息 -->
  <update id="deletePayVouchers" parameterType="map" >
  	update t_finance_pay_vouchers pv 
  	set pv.is_del = 1
  	where pv.pv_sn = #{pvSn, jdbcType=VARCHAR}
  </update>
  
  <!-- 取消 付款单 修改状态为提前退房取消 -->
  <update id="cancelPayVouchers" parameterType="map" >
  	update t_finance_pay_vouchers pv 
  	set pv.payment_status = 3
  	where pv.order_sn = #{orderSn, jdbcType=VARCHAR}
  	and pv.generate_fee_time = #{cancelDate, jdbcType=VARCHAR}
  </update>
  
  <!-- 根据付款单号，查询付款未执行记录信息 -->
  <select id="findPayVouchersByOrderSn" resultMap="BaseResultMap" parameterType="string">
  	select 
    <include refid="Base_Column_List" />
    from t_finance_pay_vouchers pv
    where pv.order_sn = #{orderSn,jdbcType=VARCHAR}
    and pv.payment_status = 1
  </select>


    <!-- 根据付款单号，查询付款未执行记录信息 -->
    <select id="findPayByOrderSn" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_finance_pay_vouchers pv
        WHERE pv.is_del = 0
        AND pv.order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pv.payment_status IN (1,2)
    </select>



    <!-- afi 根据订单号，查询有效的执行记录信息(付款单来源：定时任务) -->
    <select id="findEffectiveByOrderSn" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_finance_pay_vouchers pv
        WHERE pv.is_del = 0
        AND pv.order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pv.pay_source_type =1
        AND pv.payment_status != 7
        ORDER BY pv.generate_fee_time ASC
    </select>


    <!-- 查询清洁费生成的付款单 -->
    <select id="findCleanByOrderSn" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_finance_pay_vouchers pv
        WHERE pv.is_del = 0
        AND pv.order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pv.pay_source_type =10
        AND pv.payment_status != 7
        ORDER BY pv.generate_fee_time ASC
    </select>


    <!-- 查询用户结算生成的付款单 -->
    <select id="findSettlementByOrderSn" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_finance_pay_vouchers pv
        WHERE pv.is_del = 0
        AND pv.order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pv.pay_source_type = 2
        AND pv.payment_status != 7
        ORDER BY pv.generate_fee_time ASC
    </select>
    
    <!-- 房东日收益map -->
    <resultMap type="com.ziroom.minsu.entity.house.HouseDayRevenueEntity" id="dayRevenueMap">
    	<result column="house_fid" property="houseBaseFid" jdbcType="VARCHAR" />
	    <result column="room_fid" property="roomFid" jdbcType="VARCHAR" />
	    <result column="bed_fid" property="bedFid" jdbcType="INTEGER" />
	    <result column="rent_way" property="rentWay" jdbcType="VARCHAR" />
	    <result column="receive_uid" property="landlordUid" jdbcType="VARCHAR" />
	    <result column="day_revenue" property="dayRevenue" jdbcType="INTEGER" />
    </resultMap>
    
    <!-- 查询房东日收益列表 -->
    <select id="findLandlordDayRevenueList"  resultMap="dayRevenueMap"  parameterType="map">
    	SELECT ohs.house_fid,ohs.room_fid,ohs.bed_fid,SUM(fpv.total_fee) day_revenue,fpv.receive_uid,ohs.rent_way FROM t_finance_pay_vouchers  fpv
		LEFT JOIN t_order_house_snapshot ohs
		ON fpv.order_sn=ohs.order_sn
		WHERE fpv.is_del=0
		AND fpv.receive_type=1
		AND fpv.actual_pay_time>=#{startDate,jdbcType=TIMESTAMP}
		<![CDATA[AND fpv.actual_pay_time<=#{endDate,jdbcType=TIMESTAMP}]]>
		AND fpv.pay_source_type IN(1,2)
		AND fpv.payment_status IN (2,4,5)
		GROUP BY ohs.house_fid,ohs.room_fid,ohs.bed_fid,fpv.receive_uid,ohs.rent_way
    </select>
    
    
    <!-- 按条件分页查询付款单信息  无详细信息-->
    <select id="queryFinancePayVosByPage" resultMap="FinancePayVouchersVoMap" parameterType="map">
     SELECT <include refid="Mutil_Column_List" />,
      o.order_status ,o.user_name,o.user_tel,o.pay_status
	  FROM t_finance_pay_vouchers vos 
	  LEFT JOIN t_order o ON  vos.order_sn = o.order_sn AND o.is_del=0
	  WHERE vos.is_del=0
	   <if test="userName != null and userName!=''">
	     AND o.user_name = #{userName,jdbcType=VARCHAR}
	   </if>
	   <if test="userTel != null and userTel !=''">
	     AND o.user_tel = #{userTel,jdbcType=VARCHAR}
	   </if>
	   <if test="userUid != null and userUid !=''">
	     AND o.user_uid = #{userUid,jdbcType=VARCHAR}
	   </if>
	   <if test="orderSn != null and orderSn !=''">
	     AND o.order_sn = #{orderSn,jdbcType=VARCHAR}
	   </if>
	   <if test="actualStartTime != null and actualStartTime !=''">
	     AND vos.actual_pay_time &gt;= #{actualStartTime,jdbcType=VARCHAR}
	   </if>
	    <if test="actualEndTime != null and actualEndTime !=''">
	     AND vos.actual_pay_time &lt;= #{actualEndTime,jdbcType=VARCHAR}
	   </if>
	   <if test="runTimeStart != null and runTimeStart !=''">
	     AND vos.run_time &gt;= #{runTimeStart,jdbcType=VARCHAR}
	   </if>
	   <if test="runTimeEnd != null and runTimeEnd !=''">
	     AND vos.run_time &lt;= #{runTimeEnd,jdbcType=VARCHAR}
	   </if>
	   <if test="paymentStatus != null">
	     AND vos.payment_status = #{paymentStatus,jdbcType=INTEGER}
	   </if>
	   <if test="pvSn != null and pvSn !=''">
	     AND (vos.pv_sn = #{pvSn,jdbcType=VARCHAR} or vos.parent_pv_sn = #{pvSn,jdbcType=VARCHAR})
	   </if>
	   <if test="receiveUidList != null and receiveUidList !='' and receiveUidList.size > 0">
	     AND receive_uid in
         <foreach collection="receiveUidList" item="receiveUid" open="(" separator="," close=")">
             #{receiveUid,jdbcType=VARCHAR}
         </foreach>
	   </if>
	   ORDER BY vos.pv_sn DESC
    </select>
    
    <select id="countReCreatePvs"  resultType="java.lang.Long" parameterType="string" >
	   SELECT COUNT(id) 
	   FROM t_finance_pay_vouchers 
	   WHERE is_del = 0
	   AND parent_pv_sn=#{parentPvSn,jdbcType=VARCHAR}
    </select>
    
    <!-- <select id="countHasPayVouchers"  resultType="java.lang.Long" parameterType="map" >
	   SELECT COUNT(id) 
	   FROM t_finance_pay_vouchers 
	   WHERE is_del = 0
	   AND order_sn = #{orderSn,jdbcType=VARCHAR} 
	   AND payment_status IN (4,5) 
	   AND pay_source_type = 2
    </select>
    
    <select id="countAllVouchersByOrderSn"  resultType="java.lang.Long" parameterType="map" >
	   SELECT COUNT(id) 
	   FROM t_finance_pay_vouchers 
	   WHERE is_del = 0
	   AND order_sn = #{orderSn,jdbcType=VARCHAR} 
	   AND pay_source_type = 2
	   AND payment_status != #{noPaymentStatus,jdbcType=VARCHAR} 
	</select> -->
	
	
	<select id="countHasNotPayVouchers"  resultType="java.lang.Long" parameterType="map" >
		SELECT COUNT(id)
        FROM t_finance_pay_vouchers
        WHERE is_del = 0
        AND order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pay_source_type IN (1,2,10)
        AND payment_status IN (0,1,2,3,6,9,20)
	</select>

    <select id="listHasNotPayVouchers"  resultMap="BaseResultMap" parameterType="map" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_finance_pay_vouchers
        WHERE is_del = 0
        AND order_sn = #{orderSn,jdbcType=VARCHAR}
        AND pay_source_type IN (1,2,10)
        AND payment_status IN (0,1,2,3,6,9,20)
    </select>
	

	<update id="updateReCreatePvsOldStatus" parameterType="map">
		UPDATE t_finance_pay_vouchers
		SET payment_status = #{newPaymentStatus,jdbcType=INTEGER}
		WHERE payment_status = #{oldPaymentStatus,jdbcType=INTEGER}
		AND pv_sn = #{pvSn,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updatePaymentStatus" parameterType="map">
		UPDATE t_finance_pay_vouchers
		SET payment_status = #{newPaymentStatus,jdbcType=INTEGER}
		WHERE payment_status = #{oldPaymentStatus,jdbcType=INTEGER}
		AND pv_sn = #{pvSn,jdbcType=VARCHAR}
	</update>

	
	<update id="updateIsSend" parameterType="string">
		UPDATE t_finance_pay_vouchers
		SET is_send = is_send + 1
		WHERE pv_sn = #{pvSn,jdbcType=VARCHAR}
	</update>

    <update id="updateNoSend" parameterType="string">
        UPDATE t_finance_pay_vouchers
        SET is_send = is_send - 1
        WHERE pv_sn = #{pvSn,jdbcType=VARCHAR}
    </update>
	
	<update id="updateRunPaymentStatus" parameterType="map">
		UPDATE t_finance_pay_vouchers
		SET payment_status = #{paymentStatus,jdbcType=INTEGER},
		previous_payment_status = #{previousPaymentStatus,jdbcType=INTEGER},
		payment_type = #{paymentType,jdbcType=VARCHAR}
		WHERE pv_sn = #{pvSn,jdbcType=VARCHAR}
	</update>


    <update id="updateDelayRunTime" parameterType="map">
        UPDATE t_finance_pay_vouchers
        SET run_time = #{runTime,jdbcType=TIMESTAMP}
        WHERE pv_sn = #{pvSn,jdbcType=VARCHAR}
    </update>

	
    <!-- 按条件分页查询付款单信息  无详细信息   权限相关-->
    <select id="specialQueryFinancePayVosByPage" resultMap="FinancePayVouchersVoMap" parameterType="map">
     SELECT <include refid="Mutil_Column_List" />,
      o.order_status ,o.user_name,o.user_tel,o.pay_status
	  FROM t_finance_pay_vouchers vos 
	  LEFT JOIN t_order o ON  vos.order_sn = o.order_sn
	  LEFT JOIN `t_order_house_snapshot` tohs ON o.`order_sn`=tohs.`order_sn`
	  WHERE vos.is_del=0 AND o.is_del=0
	   <if test="userName != null and userName!=''">
	     AND o.user_name = #{userName,jdbcType=VARCHAR}
	   </if>
	   <if test="userTel != null and userTel !=''">
	     AND o.user_tel = #{userTel,jdbcType=VARCHAR}
	   </if>
	   <if test="userUid != null and userUid !=''">
	     AND o.user_uid = #{userUid,jdbcType=VARCHAR}
	   </if>
	   <if test="orderSn != null and orderSn !=''">
	     AND o.order_sn = #{orderSn,jdbcType=VARCHAR}
	   </if>
	   <if test="actualStartTime != null and actualStartTime !=''">
	     AND vos.actual_pay_time &gt;= #{actualStartTime,jdbcType=VARCHAR}
	   </if>
	    <if test="actualEndTime != null and actualEndTime !=''">
	     AND vos.actual_pay_time &lt;= #{actualEndTime,jdbcType=VARCHAR}
	   </if>
	   <if test="runTimeStart != null and runTimeStart !=''">
	     AND vos.run_time &gt;= #{runTimeStart,jdbcType=VARCHAR}
	   </if>
	   <if test="runTimeEnd != null and runTimeEnd !=''">
	     AND vos.run_time &lt;= #{runTimeEnd,jdbcType=VARCHAR}
	   </if>
	   <if test="paymentStatus != null">
	     AND vos.payment_status = #{paymentStatus,jdbcType=INTEGER}
	   </if>
	   <if test="pvSn != null and pvSn !=''">
	     AND (vos.pv_sn = #{pvSn,jdbcType=VARCHAR} or vos.parent_pv_sn = #{pvSn,jdbcType=VARCHAR})
	   </if>
	   <if test="receiveUidList != null and receiveUidList !='' and receiveUidList.size > 0">
	     AND receive_uid in
         <foreach collection="receiveUidList" item="receiveUid" open="(" separator="," close=")">
             #{receiveUid,jdbcType=VARCHAR}
         </foreach>
	   </if>
	   <if test="houseFids != null and houseFids.size > 0">
         AND tohs.house_fid in
         <foreach collection="houseFids" item="houseFid" open="(" separator="," close=")">
             #{houseFid,jdbcType=VARCHAR}
         </foreach>
       </if>
	   ORDER BY vos.pv_sn DESC
    </select>
</mapper>
