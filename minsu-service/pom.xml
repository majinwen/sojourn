<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ziroom.minsu</groupId>
	<artifactId>minsu-service</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1</version>
	<modules>
		<module>minsu-service-basedata</module>
		<module>minsu-service-entity</module>
		<module>minsu-service-common</module>
		<module>minsu-service-search</module>
		<module>minsu-service-assembly</module>
		<module>minsu-service-order</module>
		<module>minsu-service-house</module>
		<module>minsu-service-evaluate</module>
		<module>minsu-service-message</module>
		<module>minsu-service-customer</module>
		<module>minsu-service-job</module>
		<module>minsu-service-cms</module>
	</modules>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- minsu 项目版本 -->
		<minsu.service.version>${deploy.type}-0.0.1</minsu.service.version>
		<!-- Common libs -->
		<spring.bom.version>3.2.9.RELEASE</spring.bom.version>
		<javassist_version>3.15.0-GA</javassist_version>
		<netty_version>3.7.0.Final</netty_version>
		<mina_version>1.1.7</mina_version>
		<grizzly_version>2.1.4</grizzly_version>
		<httpclient_version>4.4.1</httpclient_version>
		<xstream_version>1.4.1</xstream_version>
		<fastjson_version>1.1.39</fastjson_version>
		<bsf_version>3.1</bsf_version>
		<sorcerer_version>0.8</sorcerer_version>
		<zookeeper_version>3.4.6</zookeeper_version>
		<zkclient_version>0.1</zkclient_version>
		<curator_version>2.5.0</curator_version>
		<jedis_version>2.6.0</jedis_version>
		<xmemcached_version>1.3.6</xmemcached_version>
		<cxf_version>2.6.1</cxf_version>
		<thrift_version>0.8.0</thrift_version>
		<jfreechart_version>1.0.13</jfreechart_version>
		<hessian_version>4.0.7</hessian_version>
		<servlet_version>3.1.0</servlet_version>
		<jetty_version>6.1.26</jetty_version>
		<validation_version>1.0.0.GA</validation_version>
		<hibernate_validator_version>4.2.0.Final</hibernate_validator_version>
		<jcache_version>0.4</jcache_version>
		<sca_version>2.0-M5.1</sca_version>
		<guice_version>3.0</guice_version>
		<cglib_version>2.2</cglib_version>
		<webx_version>3.0.8</webx_version>
		<jackson_version>2.3.3</jackson_version>
		<commons_pool_version>1.6</commons_pool_version>
		<commons.pool2.version>2.0</commons.pool2.version>
		<tomcat_embed_version>8.0.11</tomcat_embed_version>
		<!-- Log libs -->
		<slf4j.version>1.7.6</slf4j.version>
		<jcl_version>1.1</jcl_version>
		<log4j_version>1.2.16</log4j_version>
		<logback_version>1.1.2</logback_version>
		<!-- Test libs -->
		<junit_version>4.10</junit_version>
		<easymock_version>3.0</easymock_version>
		<jmockit_version>0.999.8</jmockit_version>
		<dubbo_version>2.8.4</dubbo_version>
		<mybatis.spring.version>1.2.2</mybatis.spring.version>
		<mybatis.version>3.2.7</mybatis.version>
		<aspectj.version>1.7.4</aspectj.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<mysql-connector-java.version>5.1.33</mysql-connector-java.version>
		<asura_version>0.0.1</asura_version>
		<sms-version>0.0.1</sms-version>
		<objdc-version>6.0</objdc-version>
		<asura_quartz_version>1.8.6</asura_quartz_version>
		<asura_quartz_version_ext>1.8.6.0</asura_quartz_version_ext>

		<httpclient.version>3.1</httpclient.version>

		<!-- cat start -->
		<cat-core.version>1.3.7-RELEASE</cat-core.version>
		<gson.version>1.6</gson.version>
		<guava.version>18.0</guava.version>
		<netty4.version>4.0.24.Final</netty4.version>
		<plexus-classworlds.version>2.5.1</plexus-classworlds.version>
		<plexus-container-default.version>1.6</plexus-container-default.version>
		<plexus-utils.version>3.0.8</plexus-utils.version>
		<xbean-reflect.version>3.7</xbean-reflect.version>
		<foundation-service.version>2.3.0</foundation-service.version>
		<tesla.druid.version>1.0.0-RELEASE</tesla.druid.version>
		<dubbo-cat.version>1.0.0-SNAPSHOTS</dubbo-cat.version>
		<!-- cat end -->

		<lucene.version>5.2.1</lucene.version>
		<solrj.version>5.2.1</solrj.version>
		<ikanalyzer.version>5.2.1</ikanalyzer.version>
		<javax.ws.rs.version>2.0</javax.ws.rs.version>
		<org.jboss.resteasy.version>3.0.7.Final</org.jboss.resteasy.version>
		<com.esotericsoftware.kryo.version>2.24.0</com.esotericsoftware.kryo.version>
		<de.javakaffee.version>0.26</de.javakaffee.version>
		<de.ruedigermoeller.version>1.55</de.ruedigermoeller.version>
		<org.mybatis.generator.version>1.3.2</org.mybatis.generator.version>
		<dom4j.version>1.1</dom4j.version>
		<com.alibaba.druid.version>1.0.17</com.alibaba.druid.version>
		<commons-codec.version>1.10</commons-codec.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<pinyin4j.version>2.5.0</pinyin4j.version>
		<jpush.version>3.1.3</jpush.version>
		<!-- rabbitmq start -->
		<rabbitmq.version>3.6.0</rabbitmq.version>
		<json.version>20160810</json.version>

		<!-- 图片上传 -->
		<metadata.extractor>2.9.1</metadata.extractor>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.ziroom.platform.misc.dubbo</groupId>
				<artifactId>dubbo-cat</artifactId>
				<version>${dubbo-cat.version}</version>
			</dependency>
			<!-- minsu start -->
			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-basedata-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<!-- api的依赖 -->
			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-house-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-house-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-order-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-order-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>


			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-evaluate-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-evaluate-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-search-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-message-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-message-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-customer-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-customer-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-entity</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-common</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-basedata-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-search-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-job</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-cms-consumer</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ziroom.minsu</groupId>
				<artifactId>minsu-service-cms-provider</artifactId>
				<version>${minsu.service.version}</version>
			</dependency>

			<!-- minsu end -->

			<!-- asura 系列项目 -->
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-base</artifactId>
				<version>${asura_version}</version>
			</dependency>
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-dao</artifactId>
				<version>${asura_version}</version>
			</dependency>
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-logback</artifactId>
				<version>${asura_version}</version>
			</dependency>
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-subscribe</artifactId>
				<version>${asura_version}</version>
			</dependency>
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-quartz-ext</artifactId>
				<version>${asura_quartz_version_ext}</version>
			</dependency>
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asuraquartz-framework-quartz-all</artifactId>
				<version>${asura_quartz_version}</version>
			</dependency>

			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-dubbo-scheduler</artifactId>
				<version>${asura_version}</version>
			</dependency>

			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-cache</artifactId>
				<version>${asura_version}</version>
			</dependency>


			<!-- mq的依赖 -->
			<dependency>
				<groupId>com.asura</groupId>
				<artifactId>com-asura-framework-rabbitmq</artifactId>
				<version>${asura_version}</version>
			</dependency>

			<dependency>
				<groupId>com.rabbitmq</groupId>
				<artifactId>amqp-client</artifactId>
				<version>${rabbitmq.version}</version>
			</dependency>

			<!-- Common libs -->

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.bom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo_version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist_version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${netty_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-core</artifactId>
				<version>${mina_version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.grizzly</groupId>
				<artifactId>grizzly-core</artifactId>
				<version>${grizzly_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient_version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson_version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.bsf</groupId>
				<artifactId>bsf-api</artifactId>
				<version>${bsf_version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.sorcerer</groupId>
				<artifactId>sorcerer-javac</artifactId>
				<version>${sorcerer_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper_version}</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator_version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis_version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.xmemcached</groupId>
				<artifactId>xmemcached</artifactId>
				<version>${xmemcached_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-simple</artifactId>
				<version>${cxf_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.thrift</groupId>
				<artifactId>libthrift</artifactId>
				<version>${thrift_version}</version>
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>${jfreechart_version}</version>
			</dependency>
			<dependency>
				<groupId>com.caucho</groupId>
				<artifactId>hessian</artifactId>
				<version>${hessian_version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet_version}</version>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>${jetty_version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation_version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate_validator_version}</version>
			</dependency>
			<dependency>
				<groupId>javax.cache</groupId>
				<artifactId>cache-api</artifactId>
				<version>${jcache_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tuscany.sca</groupId>
				<artifactId>tuscany-sca-api</artifactId>
				<version>${sca_version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice_version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson_version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson_version}</version>
			</dependency>
			<!-- Log libs -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback_version}</version>
			</dependency>
			<!-- Test libs -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.googlecode.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>${jmockit_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>${easymock_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib_version}</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons_pool_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-core</artifactId>
				<version>${tomcat_embed_version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-logging-juli</artifactId>
				<version>${tomcat_embed_version}</version>
			</dependency>

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${javax.ws.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-client</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-netty</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jdk-http</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jackson-provider</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxb-provider</artifactId>
				<version>${org.jboss.resteasy.version}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware.kryo</groupId>
				<artifactId>kryo</artifactId>
				<version>${com.esotericsoftware.kryo.version}</version>
			</dependency>
			<dependency>
				<groupId>de.javakaffee</groupId>
				<artifactId>kryo-serializers</artifactId>
				<version>${de.javakaffee.version}</version>
			</dependency>
			<dependency>
				<groupId>de.ruedigermoeller</groupId>
				<artifactId>fst</artifactId>
				<version>${de.ruedigermoeller.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons.pool2.version}</version>
			</dependency>

			<!--mybatis generator -->
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>${org.mybatis.generator.version}</version>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>

			<!-- cat start -->
			<dependency>
				<groupId>com.dianping.cat</groupId>
				<artifactId>cat-client</artifactId>
				<version>${cat-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.unidal.framework</groupId>
				<artifactId>foundation-service</artifactId>
				<version>${foundation-service.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-classworlds</artifactId>
				<version>${plexus-classworlds.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-container-default</artifactId>
				<version>${plexus-container-default.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus-utils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xbean</groupId>
				<artifactId>xbean-reflect</artifactId>
				<version>${xbean-reflect.version}</version>
			</dependency>
			<!-- cat end -->


			<!-- druid-datasourse -->
			<dependency>
				<groupId>com.ziroom.platform.tesla</groupId>
				<artifactId>tesla-druid</artifactId>
				<version>${tesla.druid.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${com.alibaba.druid.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<!-- druid-datasourse end -->

			<!-- 搜索 -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.solr</groupId>
				<artifactId>solr-solrj</artifactId>
				<version>${solrj.version}</version>
			</dependency>


			<!-- 这个包需要手动的上传到私服上 -->
			<dependency>
				<groupId>org.wltea.ik-analyzer</groupId>
				<artifactId>ik-analyzer</artifactId>
				<version>${ikanalyzer.version}</version>
			</dependency>

			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>${pinyin4j.version}</version>
			</dependency>


			<dependency>
				<groupId>cn.jpush.api</groupId>
				<artifactId>jpush-client</artifactId>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
				<version>${jpush.version}</version>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>

			</dependency>

		</dependencies>
	</dependencyManagement>




	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- test插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--<skip>true</skip> -->
					<skip>true</skip>
					<failIfNoTests>false</failIfNoTests>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- resource插件, 设定编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- clean插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>

			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>

			<!-- deploy插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>


			<!-- war插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<!-- dependency插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<!--release 插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
			</plugin>

			<!--mybatis generator插件 -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.2</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<deploy.type>dev</deploy.type>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<deploy.type>test</deploy.type>
			</properties>
		</profile>

		<profile>
			<id>online</id>
			<properties>
				<deploy.type>online</deploy.type>
			</properties>
		</profile>

	</profiles>

	<distributionManagement>
		 <repository>
	        <id>central</id>
	        <name>ziroom-releases</name>
	        <url>http://mvn.ziroom.com/sojourn-release</url>
	    </repository>
	<!--     <snapshotRepository>
	        <id>snapshots</id>
	        <name>ziroom-snapshots</name>
	        <url>http://mvn.ziroom.com/sojourn-release</url>
	    </snapshotRepository> -->
	</distributionManagement>
	<!-- <distributionManagement>
		<repository>
			<id>releases</id>
			<url>http://maven.ziroom.com:8081/nexus/content/repositories/releases</url>
		</repository>
	</distributionManagement> -->


</project>