<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="message.msgFirstAdvisoryDao">
    <resultMap id="BaseResultMap" type="com.ziroom.minsu.entity.message.MsgFirstAdvisoryEntity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 16 19:14:58 CST 2016.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="fid" property="fid" jdbcType="VARCHAR"/>
        <result column="msg_house_fid" property="msgHouseFid" jdbcType="VARCHAR"/>
        <result column="msg_base_fid" property="msgBaseFid" jdbcType="VARCHAR"/>
        <result column="from_uid" property="fromUid" jdbcType="VARCHAR"/>
        <result column="to_uid" property="toUid" jdbcType="VARCHAR"/>
        <result column="runtime" property="runtime" jdbcType="TIMESTAMP"/>
        <result column="msg_send_time" property="msgSendTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="follow_status" property="followStatus" jdbcType="INTEGER"/>
        <result column="msg_content" property="msgContent" jdbcType="VARCHAR"/>
        <result column="msg_content_ext" property="msgContentExt" jdbcType="VARCHAR"/>
        <result column="house_fid" property="houseFid" jdbcType="VARCHAR"/>
        <result column="rent_way" property="rentWay" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="last_modify_date" property="lastModifyDate" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <resultMap type="com.ziroom.minsu.services.message.entity.SysMsgVo" id="sysMsgMap" extends="BaseResultMap">
        <result column="roleType" property="roleType" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 16 19:14:58 CST 2016.
        -->
        id, fid, msg_house_fid, msg_base_fid, from_uid, to_uid, runtime, msg_send_time,
        status,follow_status,msg_content,
        msg_content_ext,house_fid,rent_way,remark,last_modify_date,create_time
    </sql>
    <sql id="Sys_Base_Column_List">
    t1.id, t1.fid, t1.msg_house_fid, t1.msg_base_fid, t1.from_uid, t1.to_uid, t1.runtime, t1.msg_send_time, t1.status,t1.msg_content, 
    t1.msg_content_ext,t1.house_fid,t1.rent_way,t1.remark,t1.last_modify_date,t1.create_time, t1.follow_status
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 16 19:14:58 CST 2016.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_msg_first_advisory
        where fid = #{fid,jdbcType=VARCHAR}
    </select>

    <select id="queryByPage" resultMap="sysMsgMap" parameterType="map">
        <!-- 条件分页查询-->
        SELECT<include refid="Sys_Base_Column_List"/>, CASE WHEN t2.`fid` IS NULL THEN 1 ELSE 3 END AS roleType
        FROM t_msg_first_advisory t1

        LEFT JOIN `t_msg_house` t2
        ON (t1.`to_uid` = t2.`tenant_uid` AND t1.`from_uid`= t2.`landlord_uid` AND t2.`is_del` = 0)
        WHERE 1=1
        <if test="runTime != null and runTime != ''">
            AND runtime &lt;=#{runTime,jdbcType=VARCHAR}
        </if>
        <if test="listStatus != null and listStatus.size > 0">
            AND status in
            <foreach collection="listStatus" item="status" index="index" open="(" separator="," close=")">
                #{status,jdbcType=INTEGER}
            </foreach>
        </if>
        GROUP BY t1.id,roleType;
    </select>

    <insert id="insertSelective" parameterType="com.ziroom.minsu.entity.message.MsgFirstAdvisoryEntity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Apr 16 19:14:58 CST 2016.
        -->
        insert into t_msg_first_advisory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="fid != null">
                fid,
            </if>
            <if test="msgHouseFid != null">
                msg_house_fid,
            </if>
            <if test="msgBaseFid != null">
                msg_base_fid,
            </if>
            <if test="fromUid != null">
                from_uid,
            </if>
            <if test="toUid != null">
                to_uid,
            </if>
            <if test="runtime != null">
                runtime,
            </if>
            <if test="msgSendTime != null">
                msg_send_time,
            </if>
            <if test="status !=null">
                status,
            </if>
            <if test="followStatus !=null">
                follow_status,
            </if>
            <if test="msgContent != null">
                msg_content,
            </if>
            <if test="msgContentExt != null">
                msg_content_ext,
            </if>
            <if test="houseFid != null">
                house_fid,
            </if>
            <if test="rentWay !=null">
                rent_way,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="lastModifyDate != null">
                last_modify_date,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="fid != null">
                #{fid,jdbcType=VARCHAR},
            </if>
            <if test="msgHouseFid != null">
                #{msgHouseFid,jdbcType=VARCHAR},
            </if>
            <if test="msgBaseFid != null">
                #{msgBaseFid,jdbcType=VARCHAR},
            </if>
            <if test="fromUid != null">
                #{fromUid,jdbcType=VARCHAR},
            </if>
            <if test="toUid != null">
                #{toUid,jdbcType=VARCHAR},
            </if>
            <if test="runtime != null">
                #{runtime,jdbcType=TIMESTAMP},
            </if>
            <if test="msgSendTime != null">
                #{msgSendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="followStatus != null">
                #{followStatus,jdbcType=INTEGER},
            </if>
            <if test="msgContent != null">
                #{msgContent,jdbcType=VARCHAR},
            </if>
            <if test="msgContentExt != null">
                #{msgContentExt,jdbcType=VARCHAR},
            </if>
            <if test="houseFid != null">
                #{houseFid,jdbcType=VARCHAR},
            </if>
            <if test="rentWay != null">
                #{rentWay,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyDate != null">
                #{lastModifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>


    <update id="updateByUid" parameterType="com.ziroom.minsu.entity.message.MsgFirstAdvisoryEntity">
        update t_msg_first_advisory
        <set>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="lastModifyDate != null">
                last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
            </if>

        </set>
        WHERE
        from_uid = #{fromUid,jdbcType=VARCHAR}
        AND to_uid = #{toUid,jdbcType=VARCHAR}
        <if test="oldStatus != null">
            AND status = #{oldStatus,jdbcType=INTEGER}
        </if>
    </update>

    <!--按fid跟新followStatus-->
    <update id="updateFollowStatusByFid" parameterType="com.ziroom.minsu.entity.message.MsgFirstAdvisoryEntity">
        update t_msg_first_advisory
        <set>
            follow_status = #{followStatus,jdbcType=VARCHAR},
            last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP}
        </set>
        WHERE
        fid = #{fid,jdbcType=VARCHAR}
    </update>

    <!--按fid查找-->
    <select id="queryByMsgBaseFid" resultMap="sysMsgMap" parameterType="map">
        SELECT
        <include refid="Sys_Base_Column_List"/>
        FROM t_msg_first_advisory t1
        WHERE msg_base_fid = #{msgBaseFid,jdbcType=VARCHAR}
    </select>

    <!-- 分页获取所有需要跟进的首次咨询对象(houseFidList和roomFidList其中一个为空) -->
    <select id="queryAllNeedFollowPageNoUnion"
            parameterType="com.ziroom.minsu.services.message.dto.MsgAdvisoryFollowRequest"
            resultType="com.ziroom.minsu.services.message.entity.MsgAdvisoryFollowVo">
        SELECT from_uid AS tenantUid
        FROM `minsu_message_db`.`t_msg_first_advisory`
        <where>
                follow_status!=30
            <if test="tenantUids != null and tenantUids.size>0">
                AND from_uid in
                <foreach collection="tenantUids" item="tenantUid" index="index" open="(" separator="," close=")">
                    #{tenantUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="landlordUids != null and landlordUids.size>0">
                AND to_uid in
                <foreach collection="landlordUids" item="landlordUid" index="index" open="(" separator="," close=")">
                    #{landlordUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="followStatus != null">
                AND follow_status = #{followStatus,jdbcType=INTEGER}
            </if>
            <if test="msgSendStartTime != null">
                AND msg_send_time  <![CDATA[ >= ]]>   #{msgSendStartTime,jdbcType=INTEGER}
            </if>
            <if test="houseFidList != null and houseFidList.size>0">
                AND house_fid in
                <foreach collection="houseFidList" item="hBaseFid" index="index" open="(" separator="," close=")">
                    #{hBaseFid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        GROUP BY from_uid
    </select>
    <!-- 分页获取所有需要跟进的首次咨询对象(houseFidList和roomFidList都不为空) -->
    <select id="queryAllNeedFollowPage" parameterType="com.ziroom.minsu.services.message.dto.MsgAdvisoryFollowRequest"
            resultType="com.ziroom.minsu.services.message.entity.MsgAdvisoryFollowVo">
        SELECT from_uid AS tenantUid
        FROM
        (SELECT from_uid , to_uid , follow_status, house_fid,create_time, rent_way
        FROM `minsu_message_db`.`t_msg_first_advisory`
        <where>
            <if test="tenantUid != null">
                from_uid = #{tenantUid,jdbcType=VARCHAR}
            </if>
            <if test="landlordUid != null">
                AND to_uid = #{landlordUid,jdbcType=VARCHAR}
            </if>
            AND rent_way=0
            <if test="followStatus != null">
                AND follow_status = #{followStatus,jdbcType=INTEGER}
            </if>
            <if test="houseFidList != null">
                AND house_fid in
                <foreach collection="houseFidList" item="hBaseFid" index="index" open="(" separator="," close=")">
                    #{hBaseFid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        UNION
        SELECT from_uid , to_uid , follow_status, house_fid,create_time, rent_way
        FROM `minsu_message_db`.`t_msg_first_advisory`
        <where>
            <if test="tenantUid != null">
                from_uid = #{tenantUid,jdbcType=VARCHAR}
            </if>
            <if test="landlordUid != null">
                AND to_uid = #{landlordUid,jdbcType=VARCHAR}
            </if>
            AND rent_way=1
            <if test="followStatus != null">
                AND follow_status = #{followStatus,jdbcType=INTEGER}
            </if>
            <if test="roomFidList != null">
                AND house_fid in
                <foreach collection="roomFidList" item="roomFid" index="index" open="(" separator="," close=")">
                    #{roomFid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ) t1
        GROUP BY t1.from_uid
    </select>

     <!-- <select id="queryAllNeedFollowListOld" parameterType="com.ziroom.minsu.services.message.dto.MsgAdvisoryFollowRequest"
            resultType="com.ziroom.minsu.services.message.entity.MsgAdvisoryFollowVo">
        SELECT t1.from_uid AS tenantUid, t1.to_uid AS landlordUid, t1.follow_status AS followStatus,
        t1.house_fid AS houseFid,t1.create_time AS createTime, t1.rent_way AS rentWay, t1.msg_base_fid AS msgBaseFid,
        CASE  WHEN t2.`msg_house_fid` IS NOT NULL THEN 1 ELSE 0 END AS isReplay
        FROM
        (SELECT from_uid , to_uid , follow_status, house_fid,create_time, rent_way, msg_base_fid,msg_house_fid
        FROM `minsu_message_db`.`t_msg_first_advisory`
        <where>
                follow_status!=30
            <if test="tenantUids != null and tenantUids.size>0">
                AND from_uid in
                <foreach collection="tenantUids" item="tenantUid" index="index" open="(" separator="," close=")">
                    #{tenantUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="landlordUids != null and landlordUids.size>0">
                AND to_uid in
                <foreach collection="landlordUids" item="landlordUid" index="index" open="(" separator="," close=")">
                    #{landlordUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="followStatus != null">
                AND follow_status = #{followStatus,jdbcType=INTEGER}
            </if>
            <if test="msgSendStartTime != null">
                AND msg_send_time  <![CDATA[ >= ]]>  #{msgSendStartTime,jdbcType=VARCHAR}
            </if>
            <if test="houseFidList != null and houseFidList.size>0">
                AND house_fid in
                <foreach collection="houseFidList" item="hBaseFid" index="index" open="(" separator="," close=")">
                    #{hBaseFid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ) t1
        left join (SELECT DISTINCT `msg_house_fid` FROM `t_msg_base` WHERE msg_sender_type = 10 AND is_system_send = 0 ) t2
        on t1.`msg_house_fid` = t2.`msg_house_fid`
        <where>
            <if test="tenantUidList != null and tenantUidList.size>0">
                t1.from_uid in
                <foreach collection="tenantUidList" item="tuid" index="index" open="(" separator="," close=")">
                    #{tuid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="isReplay != null and isReplay == 0">
                AND t2.msg_house_fid IS NULL
            </if>
            <if test="isReplay != null and isReplay == 1">
                AND t2.msg_house_fid IS NOT NULL
            </if>
        </where>
        ORDER BY t1.from_uid ASC , t1.create_time DESC
    </select>  -->
    
     <select id="queryAllNeedFollowList" parameterType="com.ziroom.minsu.services.message.dto.MsgAdvisoryFollowRequest"
            resultType="com.ziroom.minsu.services.message.entity.MsgAdvisoryFollowVo">
        SELECT t1.from_uid AS tenantUid, t1.to_uid AS landlordUid, t1.follow_status AS followStatus,
        t1.house_fid AS houseFid,t1.create_time AS createTime, t1.rent_way AS rentWay, t1.msg_base_fid AS msgBaseFid,
        t1.msg_house_fid AS msgHouseFid
        FROM
        (SELECT from_uid , to_uid , follow_status, house_fid,create_time, rent_way, msg_base_fid,msg_house_fid
        FROM `minsu_message_db`.`t_msg_first_advisory`
        <where>
                follow_status!=30
            <if test="tenantUids != null and tenantUids.size>0">
                AND from_uid in
                <foreach collection="tenantUids" item="tenantUid" index="index" open="(" separator="," close=")">
                    #{tenantUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="landlordUids != null and landlordUids.size>0">
                AND to_uid in
                <foreach collection="landlordUids" item="landlordUid" index="index" open="(" separator="," close=")">
                    #{landlordUid,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="followStatus != null">
                AND follow_status = #{followStatus,jdbcType=INTEGER}
            </if>
            <if test="msgSendStartTime != null">
                AND msg_send_time  <![CDATA[ >= ]]>  #{msgSendStartTime,jdbcType=VARCHAR}
            </if>
            <if test="houseFidList != null and houseFidList.size>0">
                AND house_fid in
                <foreach collection="houseFidList" item="hBaseFid" index="index" open="(" separator="," close=")">
                    #{hBaseFid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ) t1
        <where>
            <if test="tenantUidList != null and tenantUidList.size>0">
                t1.from_uid in
                <foreach collection="tenantUidList" item="tuid" index="index" open="(" separator="," close=")">
                    #{tuid,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
        ORDER BY t1.from_uid ASC , t1.create_time DESC
    </select> 
</mapper>
