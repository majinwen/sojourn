<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zra.repair.dao.ZryRepairOrderLogMapper" >
  <resultMap id="BaseResultMap" type="com.zra.repair.entity.ZryRepairOrderLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fid" property="fid" jdbcType="VARCHAR" />
    <result column="repair_order" property="repairOrder" jdbcType="VARCHAR" />
    <result column="from_status" property="fromStatus" jdbcType="INTEGER" />
    <result column="to_status" property="toStatus" jdbcType="INTEGER" />
    <result column="create_fid" property="createFid" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="cancel_reason" property="cancelReason" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fid, repair_order, from_status, to_status, create_fid, remark, cancel_reason, create_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zry_repair_order_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zry_repair_order_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zra.repair.entity.ZryRepairOrderLog" >
    insert into zry_repair_order_log (id, fid, repair_order, 
      from_status, to_status, create_fid, remark, cancel_reason,
      create_date)
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=VARCHAR}, #{repairOrder,jdbcType=VARCHAR}, 
      #{fromStatus,jdbcType=INTEGER}, #{toStatus,jdbcType=INTEGER}, #{createFid,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{cancelReason,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zra.repair.entity.ZryRepairOrderLog" >
    insert into zry_repair_order_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="repairOrder != null" >
        repair_order,
      </if>
      <if test="fromStatus != null" >
        from_status,
      </if>
      <if test="toStatus != null" >
        to_status,
      </if>
      <if test="createFid != null" >
        create_fid,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="cancelReason != null" >
        cancel_reason,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="repairOrder != null" >
        #{repairOrder,jdbcType=VARCHAR},
      </if>
      <if test="fromStatus != null" >
        #{fromStatus,jdbcType=INTEGER},
      </if>
      <if test="toStatus != null" >
        #{toStatus,jdbcType=INTEGER},
      </if>
      <if test="createFid != null" >
        #{createFid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null" >
        #{cancelReason,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zra.repair.entity.ZryRepairOrderLog" >
    update zry_repair_order_log
    <set >
      <if test="fid != null" >
        fid = #{fid,jdbcType=VARCHAR},
      </if>
      <if test="repairOrder != null" >
        repair_order = #{repairOrder,jdbcType=VARCHAR},
      </if>
      <if test="fromStatus != null" >
        from_status = #{fromStatus,jdbcType=INTEGER},
      </if>
      <if test="toStatus != null" >
        to_status = #{toStatus,jdbcType=INTEGER},
      </if>
      <if test="createFid != null" >
        create_fid = #{createFid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null" >
        cancel_reason = #{cancelReason,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zra.repair.entity.ZryRepairOrderLog" >
    update zry_repair_order_log
    set fid = #{fid,jdbcType=VARCHAR},
      repair_order = #{repairOrder,jdbcType=VARCHAR},
      from_status = #{fromStatus,jdbcType=INTEGER},
      to_status = #{toStatus,jdbcType=INTEGER},
      create_fid = #{createFid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cancel_reason = #{cancelReason,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 条件查询报修单操作记录 -->
  <select id="selectByCondition" resultType="com.zra.repair.entity.ZryRepairOrderLog" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
    <include refid="Base_Column_List" />
    FROM zry_repair_order_log
    WHERE
    1=1
    <if test="repairOrder != null and repairOrder != ''"  >
      AND repair_order = #{repairOrder,jdbcType=VARCHAR}
    </if>
    ORDER BY ${orderBy} ${sortBy}
  </select>
</mapper>