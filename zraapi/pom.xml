<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zra</groupId>
	<artifactId>zraapi</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<name>zraapi</name>
	<packaging>war</packaging>
	<description>Zraapi powered by Tesla Framework.</description>

	<properties>
		<!--for eclipse m2e plugin, default run as ROOT.war -->
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
		<mysql-version>5.1.30</mysql-version>
		<mybatis-version>3.2.7</mybatis-version>
		<mybatis-spring-version>1.2.2</mybatis-spring-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<aspectjweaver-version>1.7.2</aspectjweaver-version>
		<org.mockito-version>1.10.19</org.mockito-version>
		<storage-client-version>1.0.0.0-SNAPSHOT</storage-client-version>
		<org.springframework-version>4.1.4.RELEASE</org.springframework-version>

		<!-- 文件拷贝时的编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>

		<io.swagger-version>1.5.8</io.swagger-version>
		<redis.clients-version>2.8.1</redis.clients-version>
		<pagehelper-version>4.1.3</pagehelper-version>
		<servlet-api-version>2.5</servlet-api-version>
        <ojdbc-version>14</ojdbc-version>
		<httpclient.version>3.1</httpclient.version>
		<apollo-logproxy-version>1.0.7-SNAPSHOT</apollo-logproxy-version>
		<apollo-message-version>1.0.5-SNAPSHOT</apollo-message-version>
        <com.zra.common-version>2.2</com.zra.common-version>
		<dubbo.version>2.8.4</dubbo.version>
		<zookeeper.version>3.4.6</zookeeper.version>
		<zkclient.version>0.1</zkclient.version>
		<asura-version>0.0.1</asura-version>
		<version-minsu>${deploy.type}-0.0.1</version-minsu>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.ziroom.platform.tesla</groupId>
				<artifactId>tesla-bom</artifactId>
				<version>1.0.0-RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
  		<dependency>
			<groupId>com.zra</groupId>
			<artifactId>zra_common</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>${pagehelper-version}</version>
		</dependency>

		<dependency>
			<groupId>com.ziroom.platform.tesla</groupId>
			<artifactId>tesla-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ziroom.platform.tesla</groupId>
			<artifactId>tesla-config</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ziroom.platform.tesla</groupId>
			<artifactId>tesla-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ziroom.platform.tesla</groupId>
			<artifactId>tesla-druid</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ziroom.platform</groupId>
			<artifactId>harmonia</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis-version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver-version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${org.mockito-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<!-- quartz start -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
			<version>1.6.3</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.3</version>
		</dependency>
		<!-- quartz end -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>${io.swagger-version}</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${redis.clients-version}</version>
		</dependency>

		<!--图片SDK -->
		<dependency>
			<groupId>com.ziroom.tech.storage</groupId>
			<artifactId>storage-client</artifactId>
			<version>${storage-client-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
		</dependency>
		<!-- oracle 的数据库驱动 -->
       	<dependency>
            <groupId>ojdbc</groupId>
            <artifactId>ojdbc</artifactId>
            <version>${ojdbc-version}</version>
        </dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>

		<!-- 极光推送 -->

		 <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>17.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>1.5.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>cn.jpush.api</groupId>
		    <artifactId>jpush-client</artifactId>
		    <version>3.2.9</version>
		</dependency>
       <dependency>
            <groupId>com.apollo</groupId>
            <artifactId>apollo-logproxy</artifactId>
            <version>${apollo-logproxy-version}</version>
        </dependency>

		<!--接入消息平台-->
		<dependency>
			<groupId>com.apollo</groupId>
			<artifactId>apollo-message</artifactId>
			<version>${apollo-message-version}</version>
		</dependency>
        <dependency>
            <groupId>com.zra</groupId>
            <artifactId>common</artifactId>
            <version>${com.zra.common-version}</version>
        </dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.16</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.10.RELEASE</version>
			<scope>test</scope>
		</dependency>



		<!--2017年7月27日 接入dubbo的相关配置-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo.version}</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpcore</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--2017年7月27日 接入dubbo的相关配置-->

		<!--2017年7月27日 zookeeper相关配置-->
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zkclient.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--2017年7月27日 zookeeper相关配置-->


		<!--asura 相关的jar引入  2017年7月28日-->

		<dependency>
			<groupId>com-asura-framework-base</groupId>
			<artifactId>com-asura-framework-base</artifactId>
			<version>${asura-version}</version>
		</dependency>

		<!--api jar包引入-->
		<dependency>
			<groupId>com.ziroom.minsu</groupId>
			<artifactId>minsu-service-basedata-consumer</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ziroom.minsu</groupId>
			<artifactId>minsu-service-cms-consumer</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ziroom.zrp</groupId>
			<artifactId>zrp-service-houses-consumer</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ziroom.zrp</groupId>
			<artifactId>zrp-service-houses-entity</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.ziroom.zrp</groupId>
			<artifactId>zrp-service-trading-consumer</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ziroom.zrp</groupId>
			<artifactId>zrp-service-trading-entity</artifactId>
			<version>${deploy.type}-0.0.1</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>zraapi</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!--<warName>ROOT</warName>-->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.ziroom.platform.tesla.build</groupId>
				<artifactId>build-info-maven-plugin</artifactId>
				<version>1.0.1-RELEASE</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>extract</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.eclipse.jetty</groupId> <artifactId>jetty-maven-plugin</artifactId> 
				<version>9.0.6.v20130930</version> <configuration> <port>8080</port> <war>${project.build.directory}/ROOT.war</war> 
				</configuration> </plugin> -->

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<deploy.type>dev</deploy.type>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<deploy.type>test</deploy.type>
			</properties>
		</profile>

		<profile>
			<id>online</id>
			<properties>
				<deploy.type>online</deploy.type>
			</properties>
		</profile>

	</profiles>
</project>
